"""
    DCC XML Generator Functions
    
    AWB
"""

import os
import dcc
import dccxml
   
def GenAWBParams(handle, AWB_params, cls_id):
    return

bayer_phase = 0
def GenAWBXML(directory, filebase, params, AWB_params):

    if (os.path.exists(directory) == False):
        print('Creating directory:  %s\n' %directory)
        try:
            os.makedirs(directory)
        except OSError as err:
            utils.error('%s: %s' %(err.strerror, err.filename), skip=True)

    filename = os.path.join(directory, '%s_%s.xml' %(params['SENSOR'], filebase));
    print('Creating XML File:  %s\n' %filename)
	
    module_params = {}
    module_params['NAME']   = 'AWB_DCC_xml'
    module_params['STRUCT_NAME'] = 'awb_alg_dcc_tuning'
    module_params['DCC_ID'] = dcc.DCC_ID_AAA_ALG_AWB_TI3
    module_params['FUNC_GENPARAMS'] = GenAWBParams
    global bayer_phase
    bayer_phase = params['BAYER_PATTERN']
    
    handle = dccxml.OpenFile(filename)
    dccxml.GenHeader(handle, params, module_params)

    handle.write('  <!--=======================================================================-->\n')
    handle.write('     <typedef>\n')
    handle.write('\n')
    handle.write('	     <dcc_awb_ref_gray_data_t type="struct">\n')
    handle.write('			<num_of_ref_1	type="uint8"> </num_of_ref_1>\n')
    handle.write('			<num_of_ref_2	type="uint8"> </num_of_ref_2>\n')
    handle.write('			<num_of_gray    type="uint8"> </num_of_gray>\n')
    handle.write('			<radius         type="uint16"> </radius>\n')
    handle.write('			<color_temp_1	type="uint16[]"> </color_temp_1>\n')
    handle.write('			<wbReferenceCb  type="int16[][4]"> </wbReferenceCb>\n')
    handle.write('			<wbReferenceCr  type="int16[][4]"> </wbReferenceCr>\n')
    handle.write('			<ref_gray_R_1	type="uint16[][4]"> </ref_gray_R_1>\n')
    handle.write('			<ref_gray_G_1	type="uint16[][4]"> </ref_gray_G_1>\n')
    handle.write('			<ref_gray_B_1	type="uint16[][4]"> </ref_gray_B_1>\n')
    handle.write('			<ref_index_2	type="uint8[]"> </ref_index_2>\n')
    handle.write('			<color_temp_2	type="uint16[]"> </color_temp_2>\n')
    handle.write('			<referencesCb_2 type="int16[][4]"> </referencesCb_2>\n')
    handle.write('			<referencesCr_2 type="int16[][4]"> </referencesCr_2>\n')
    handle.write('			<ref_gray_R_2	type="uint16[][4]"> </ref_gray_R_2>\n')
    handle.write('			<ref_gray_G_2	type="uint16[][4]"> </ref_gray_G_2>\n')
    handle.write('			<ref_gray_B_2	type="uint16[][4]"> </ref_gray_B_2>\n')
    handle.write('        </dcc_awb_ref_gray_data_t>\n')
    handle.write('\n')
    handle.write('        <dcc_awb_calc_data_t type="struct">\n')
    handle.write('            <awb_basic_ref	            type="dcc_awb_ref_gray_data_t">	 </awb_basic_ref>\n')
    handle.write('			<img_ref    	            type="uint16[]">		 </img_ref>\n')
    handle.write('            <luma_awb_min	            type="int32">				</luma_awb_min>\n')
    handle.write('            <luma_awb_max	            type="int32">				</luma_awb_max>\n')
    handle.write('		    <low_color_temp_thresh	    type="uint16">				</low_color_temp_thresh>\n')
    handle.write('            <apply_rgb_adjust	        type="uint8">				</apply_rgb_adjust>\n')
    handle.write('            <R_adjust	                type="int16">				</R_adjust>\n')
    handle.write('            <B_adjust	                type="int16">				</B_adjust>\n')
    handle.write('            <SB_1	                    type="uint16">              </SB_1>\n')
    handle.write('            <SB_2	                    type="uint16">				</SB_2>\n')
    handle.write('            <SB_low_bound	            type="uint16">				</SB_low_bound>\n')
    handle.write('            <default_T_H	            type="uint16">				</default_T_H>\n')
    handle.write('            <default_T_MH               type="uint16">				</default_T_MH>\n')
    handle.write('            <default_T_ML               type="uint16">				</default_T_ML>\n')
    handle.write('            <default_T_L                type="uint16">				</default_T_L>\n')
    handle.write('            <default_T_H_index          type="uint8">				</default_T_H_index>\n')
    handle.write('            <default_T_MH_index         type="uint8">				</default_T_MH_index>\n')
    handle.write('            <default_T_ML_index         type="uint8">				</default_T_ML_index>\n')
    handle.write('            <default_T_L_index	        type="uint8">				</default_T_L_index>\n')
    handle.write('            <best_gray_index_default    type="uint8">				</best_gray_index_default>\n')
    handle.write('            <flash_ref	                type="dcc_awb_ref_gray_data_t[4]">	 </flash_ref>\n')
    handle.write('			<skin_img_ref    	        type="uint16[]">		 </skin_img_ref>\n')
    handle.write('		</dcc_awb_calc_data_t>\n')
    handle.write('\n')
    handle.write('        <dcc_ti2_color_gain_scalers_t type="struct">\n')
    handle.write('            <dgain  type="uint16">  </dgain>\n')
    handle.write('            <gainGr type="uint16">  </gainGr>\n')
    handle.write('            <gainR  type="uint16">  </gainR>\n')
    handle.write('            <gainGb type="uint16">  </gainGb>\n')
    handle.write('            <gainB  type="uint16">  </gainB>\n')
    handle.write('        </dcc_ti2_color_gain_scalers_t>\n')
    handle.write('\n')
    handle.write('        <dcc_awb_ti2_data_t type="struct">\n')
    handle.write('            <wbModeData type="dcc_ti2_color_gain_scalers_t[]">      </wbModeData>\n')
    handle.write('        </dcc_awb_ti2_data_t>\n')
    handle.write('\n')
    handle.write('        <dcc_awb_supp2_alg3_t       type="struct">\n')
    handle.write('            <use_calib              type="uint16">              </use_calib>\n')
    handle.write('			<blue_index             type="uint16">              </blue_index>\n')
    handle.write('            <red_index              type="uint16">              </red_index>\n')
    handle.write('            <green1_index           type="uint16">              </green1_index>\n')
    handle.write('            <green2_index           type="uint16">              </green2_index>\n')
    handle.write('            <enable_opt             type="uint8">               </enable_opt>\n')
    handle.write('            <max_Cr                 type="int16">               </max_Cr>\n')
    handle.write('            <max_Cb                 type="int16">               </max_Cb>\n')
    handle.write('            <awb_speed              type="uint16">               </awb_speed>\n')    
    handle.write('            <awb_calc_data          type="dcc_awb_calc_data_t">     </awb_calc_data>\n')
    handle.write('            <awb_data               type="dcc_awb_ti2_data_t">      </awb_data>\n')
    handle.write('        </dcc_awb_supp2_alg3_t>\n')
    handle.write('\n')
    handle.write('    </typedef>\n')
    handle.write('  <!--=======================================================================-->\n')

    if(bayer_phase==0):
        red_index = 0
        green1_index = 1
        green2_index = 2
        blue_index = 3
    elif(bayer_phase==1):
        green1_index = 0
        red_index = 1
        blue_index = 2
        green2_index = 3
    elif(bayer_phase==2):
        green2_index = 0
        blue_index = 1
        red_index = 2
        green1_index = 3
    elif(bayer_phase==3):
        blue_index = 0
        green2_index = 1
        green1_index = 2
        red_index = 3
    else:
        print('Unsupported bayer phase: Exiting \n')
        return

    handle.write('  <!--=======================================================================-->\n')
    handle.write('    <system_parameters>\n')
    handle.write('      <awb_alg_dcc_tuning type="dcc_awb_supp2_alg3_t" main="general">\n')
    handle.write('\n')
    handle.write(' {\n')
    handle.write('	1,                                   /*use_calib*/\n')
    handle.write('    %d,                                   /*blue_index*/\n' %blue_index)
    handle.write('    %d,                                   /*red_index */\n' %red_index)
    handle.write('    %d,                                   /* green1_index*/\n' %green1_index)
    handle.write('    %d,                                   /* green2_index*/\n' %green2_index)
    handle.write('    1,                                   /* opt_data */\n')
    handle.write('    200,                                   /* max_cr */\n')
    handle.write('    200,                                   /* max_cb */\n')
    handle.write('    6,                                   /* awb_speed */\n')
    handle.write('\n')
    handle.write('    	{                           /* ti2_default_awb_calc_data */\n')
    handle.write('		{ //awb_ref\n')
    handle.write('			1,		// num_of_ref_1\n')
    handle.write('			1,		// num_of_ref_2\n')
    handle.write('			1,		// num_of_gray\n')
    handle.write('			50,		// radius\n')
    handle.write('\n')
    handle.write('       // color_temp_1[num_of_ref_1]\n')
    handle.write('         {3800},\n')
    handle.write('\n')
    handle.write('			   // wbReferenceCb[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // wbReferenceCr[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_index_2[num_of_ref_2]\n')
    handle.write('       {0},\n')
    handle.write('\n')
    handle.write('   // color_temp_2[num_of_ref_2]\n')
    handle.write('         {3800},\n')
    handle.write('\n')
    handle.write('   // referencesCb_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // referencesCr_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0,},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('	},\n')
    handle.write('   // img_ref[NUM_OF_REF_2*1120]\n')
    handle.write('   {\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write(' 	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write(' 	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write(' 	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write(' 	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write(' 	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('	0,0,0,0,\n')
    handle.write('  \n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('		// AWB tuning parameters\n')
    handle.write('		5,	// luma_awb_min\n')
    handle.write('		250,	// luma_awb_max\n')
    handle.write('\n')
    handle.write('		3250,	// low_color_temp_thresh\n')
    handle.write('		0,	// apply_rgb_adjust\n')
    handle.write('		0,	// R_adjust()\n')
    handle.write('		0,	// B_adjust()\n')
    handle.write('\n')
    handle.write('		45,	// SB_1\n')
    handle.write('		55,	// SB_2\n')
    handle.write('		0,	    // SB_low_bound\n')
    handle.write('\n')
    handle.write('		3800,     // default_T_Hh\n')
    handle.write('		3800,     // default_T_MH\n')
    handle.write('		3800,     // default_T_ML\n')
    handle.write('		3800,     // default_T_L\n')
    handle.write('\n')
    handle.write('		0,		// default_T_Hh_index\n')
    handle.write('		0,		// default_T_MH_index\n')
    handle.write('		0,		// default_T_ML_index\n')
    handle.write('		0,		// default_T_L_index\n')
    handle.write('\n')
    handle.write('		1,     // best_gray_index_default\n')
    handle.write('\n')
    handle.write('\n')
    handle.write('		{ //started tuning for flash\n')
    handle.write('			{ //flash[0]\n')
    handle.write('			1,			// num_of_ref_1\n')
    handle.write('			1,			// num_of_ref_2\n')
    handle.write('			1,		// num_of_gray\n')
    handle.write('			50,		// radius\n')
    handle.write('\n')
    handle.write('       // color_temp_1[num_of_ref_1]\n')
    handle.write('         {3800},\n')
    handle.write('\n')
    handle.write('			   // wbReferenceCb[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // wbReferenceCr[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_index_2[num_of_ref_2]\n')
    handle.write('   {0},\n')
    handle.write('\n')
    handle.write('   // color_temp_2[num_of_ref_2]\n')
    handle.write('   {3800},\n')
    handle.write('\n')
    handle.write('   // referencesCb_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // referencesCr_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   },\n')
    handle.write('			{ //flash[1]\n')
    handle.write('			1,			// num_of_ref_1\n')
    handle.write('			1,			// num_of_ref_2\n')
    handle.write('			1,		// num_of_gray\n')
    handle.write('			50,		// radius\n')
    handle.write('\n')
    handle.write('       // color_temp_1[num_of_ref_1]\n')
    handle.write('         {3800},\n')
    handle.write('\n')
    handle.write('			   // wbReferenceCb[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // wbReferenceCr[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_index_2[num_of_ref_2]\n')
    handle.write('   {0},\n')
    handle.write('\n')
    handle.write('   // color_temp_2[num_of_ref_2]\n')
    handle.write('   {3800},\n')
    handle.write('\n')
    handle.write('\n')
    handle.write('   // referencesCb_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // referencesCr_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   },\n')
    handle.write('			{ //flash[2]\n')
    handle.write('			1,			// num_of_ref_1\n')
    handle.write('			1,			// num_of_ref_2\n')
    handle.write('			1,		// num_of_gray\n')
    handle.write('			50,		// radius\n')
    handle.write('\n')
    handle.write('       // color_temp_1[num_of_ref_1]\n')
    handle.write('         {3800},\n')
    handle.write('\n')
    handle.write('			   // wbReferenceCb[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // wbReferenceCr[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_index_2[num_of_ref_2]\n')
    handle.write('   {0},\n')
    handle.write('\n')
    handle.write('   // color_temp_2[num_of_ref_2]\n')
    handle.write('   {3800},\n')
    handle.write('\n')
    handle.write('   // referencesCb_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // referencesCr_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   },\n')
    handle.write('			{ //flash[3]\n')
    handle.write('			1,			// num_of_ref_1\n')
    handle.write('			1,			// num_of_ref_2\n')
    handle.write('			1,		// num_of_gray\n')
    handle.write('			50,		// radius\n')
    handle.write('\n')
    handle.write('       // color_temp_1[num_of_ref_1]\n')
    handle.write('         {3800},\n')
    handle.write('\n')
    handle.write('			   // wbReferenceCb[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // wbReferenceCr[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_1[num_of_ref_1][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_index_2[num_of_ref_2]\n')
    handle.write('   {0},\n')
    handle.write('\n')
    handle.write('   // color_temp_2[num_of_ref_2]\n')
    handle.write('   {3800},\n')
    handle.write('\n')
    handle.write('   // referencesCb_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // referencesCr_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_R_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_G_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   // ref_gray_B_2[num_of_ref_2][num_of_gray]\n')
    handle.write('   {\n')
    handle.write('       {0,0,0,0},\n')
    handle.write('   },\n')
    handle.write('\n')
    handle.write('   },\n')
    handle.write('		},//end of tuning data for flsh\n')
    handle.write('		{\n')
    handle.write('\n')
    handle.write('// skin histogram:\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('0, 0, 0, 0,\n')
    handle.write('\n')
    handle.write('		},//end of skin histogram data\n')
    handle.write('\n')
    handle.write('	}, //end of awb_calc_data\n')
    handle.write('\n')
    handle.write('\n')
    handle.write('	{\n')
    handle.write('		//User modes dcc_ti2_color_gain_scalers_t[]\n')
    handle.write('NULL,\n')
    handle.write('	},\n')
    handle.write('}\n')
    handle.write('     </awb_alg_dcc_tuning>\n')
    handle.write('  </system_parameters>\n')
    handle.write('\n')
    handle.write('  <!--=====================================================================-->\n')
    
    dccxml.GenFooter(handle, module_params)
    dccxml.CloseFile(handle)
